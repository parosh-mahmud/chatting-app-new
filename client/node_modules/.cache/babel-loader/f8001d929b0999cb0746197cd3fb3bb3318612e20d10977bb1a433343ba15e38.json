{"ast":null,"code":"var _jsxFileName = \"E:\\\\chatapp\\\\client\\\\src\\\\components\\\\miscellaneous\\\\SingleChat.js\";\nimport React from 'react';\nimport { ChatState } from '../../Context/ChatProvider';\nimport { Flex, Text } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SingleChat = () => {\n  const {\n    selectedChat,\n    setSelectedChat\n  } = ChatState();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: selectedChat ?\n    /*#__PURE__*/\n    // Render chat content here when a chat is selected\n    // Replace this with your chat component\n    _jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Flex, {\n      d: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      h: \"100vh\" // Use \"100vh\" for full viewport height\n      ,\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"3xl\",\n        pb: 3,\n        fontFamily: \"Work sans\",\n        children: \"Click on a user to start a new conversation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_c = SingleChat;\nexport default SingleChat;\nvar _c;\n$RefreshReg$(_c, \"SingleChat\");","map":{"version":3,"names":["React","ChatState","Flex","Text","jsxDEV","_jsxDEV","Fragment","_Fragment","SingleChat","selectedChat","setSelectedChat","children","fileName","_jsxFileName","lineNumber","columnNumber","d","alignItems","justifyContent","h","fontSize","pb","fontFamily","_c","$RefreshReg$"],"sources":["E:/chatapp/client/src/components/miscellaneous/SingleChat.js"],"sourcesContent":["import React from 'react';\r\nimport { ChatState } from '../../Context/ChatProvider';\r\nimport { Flex, Text } from '@chakra-ui/react';\r\n\r\nconst SingleChat = () => {\r\n  const { selectedChat, setSelectedChat } = ChatState();\r\n\r\n  return (\r\n    <>\r\n      {selectedChat ? (\r\n        // Render chat content here when a chat is selected\r\n        // Replace this with your chat component\r\n        <div>\r\n          {/* Chat content goes here */}\r\n        </div>\r\n      ) : (\r\n        <Flex\r\n          d=\"flex\"\r\n          alignItems=\"center\"\r\n          justifyContent=\"center\"\r\n          h=\"100vh\" // Use \"100vh\" for full viewport height\r\n        >\r\n          <Text fontSize=\"3xl\" pb={3} fontFamily=\"Work sans\">\r\n            Click on a user to start a new conversation\r\n          </Text>\r\n\r\n          \r\n        </Flex>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SingleChat;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,4BAA4B;AACtD,SAASC,IAAI,EAAEC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE9C,MAAMC,UAAU,GAAGA,CAAA,KAAM;EACvB,MAAM;IAAEC,YAAY;IAAEC;EAAgB,CAAC,GAAGT,SAAS,CAAC,CAAC;EAErD,oBACEI,OAAA,CAAAE,SAAA;IAAAI,QAAA,EACGF,YAAY;IAAA;IACX;IACA;IACAJ,OAAA;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEK,CAAC,gBAENV,OAAA,CAACH,IAAI;MACHc,CAAC,EAAC,MAAM;MACRC,UAAU,EAAC,QAAQ;MACnBC,cAAc,EAAC,QAAQ;MACvBC,CAAC,EAAC,OAAO,CAAC;MAAA;MAAAR,QAAA,eAEVN,OAAA,CAACF,IAAI;QAACiB,QAAQ,EAAC,KAAK;QAACC,EAAE,EAAE,CAAE;QAACC,UAAU,EAAC,WAAW;QAAAX,QAAA,EAAC;MAEnD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGH;EACP,gBACD,CAAC;AAEP,CAAC;AAACQ,EAAA,GA3BIf,UAAU;AA6BhB,eAAeA,UAAU;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}