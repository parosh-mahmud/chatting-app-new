{"ast":null,"code":"var _jsxFileName = \"E:\\\\chatapp\\\\client\\\\src\\\\components\\\\miscellaneous\\\\SingleChat.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { ChatState } from '../../Context/ChatProvider';\nimport { Flex, IconButton, Text, useToast } from '@chakra-ui/react';\nimport { ArrowBackIcon } from \"@chakra-ui/icons\";\nimport { getSender, getSenderFull } from '../../config/ChatLogics';\nimport ProfileModal from './ProfileModal';\nimport UpdateGroupChatModal from './UpdateGroupChatModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SingleChat = ({\n  fetchAgain,\n  setFetchAgain\n}) => {\n  _s();\n  const {\n    selectedChat,\n    setSelectedChat,\n    user\n  } = ChatState();\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [socketConnected, setSocketConnected] = useState(false);\n  const [typing, setTyping] = useState(false);\n  const [istyping, setIsTyping] = useState(false);\n  const toast = useToast();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: selectedChat ? /*#__PURE__*/_jsxDEV(Flex, {\n      flexDirection: \"column\",\n      alignItems: \"stretch\",\n      h: \"100vh\",\n      w: \"100%\",\n      overflow: \"hidden\",\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        fontSize: {\n          base: \"28px\",\n          md: \"30px\"\n        },\n        pb: 3,\n        px: 2,\n        w: \"100%\",\n        fontFamily: \"Work sans\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          d: {\n            base: \"flex\",\n            md: \"none\"\n          },\n          icon: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 21\n          }, this),\n          onClick: () => setSelectedChat(\"\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: selectedChat.isGroupChat ? selectedChat.chatName.toUpperCase() : getSender(user, selectedChat.users)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          alignItems: \"center\",\n          children: selectedChat.isGroupChat ? /*#__PURE__*/_jsxDEV(UpdateGroupChatModal, {\n            fetchAgain: fetchAgain,\n            setFetchAgain: setFetchAgain\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(ProfileModal, {\n            user: getSenderFull(user, selectedChat.users)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        d: \"flex\",\n        flexDir: \"column\",\n        justifyContent: \"flex-end\",\n        p: 3,\n        bg: \"#E8E8E8\",\n        w: \"100%\",\n        h: \"450px\",\n        borderRadius: \"lg\",\n        overflowY: \"auto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Flex, {\n      d: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      h: \"100vh\",\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"3xl\",\n        pb: 3,\n        fontFamily: \"Work sans\",\n        children: \"Click on a user to start a new conversation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(SingleChat, \"yNJQsvQCi34jhLZJXqwA4QezNxw=\", false, function () {\n  return [useToast];\n});\n_c = SingleChat;\nexport default SingleChat;\nvar _c;\n$RefreshReg$(_c, \"SingleChat\");","map":{"version":3,"names":["React","ChatState","Flex","IconButton","Text","useToast","ArrowBackIcon","getSender","getSenderFull","ProfileModal","UpdateGroupChatModal","jsxDEV","_jsxDEV","Fragment","_Fragment","SingleChat","fetchAgain","setFetchAgain","_s","selectedChat","setSelectedChat","user","messages","setMessages","useState","loading","setLoading","newMessage","setNewMessage","socketConnected","setSocketConnected","typing","setTyping","istyping","setIsTyping","toast","children","flexDirection","alignItems","h","w","overflow","fontSize","base","md","pb","px","fontFamily","justifyContent","d","icon","fileName","_jsxFileName","lineNumber","columnNumber","onClick","isGroupChat","chatName","toUpperCase","users","flexDir","p","bg","borderRadius","overflowY","_c","$RefreshReg$"],"sources":["E:/chatapp/client/src/components/miscellaneous/SingleChat.js"],"sourcesContent":["import React from 'react';\r\nimport { ChatState } from '../../Context/ChatProvider';\r\nimport { Flex, IconButton, Text, useToast } from '@chakra-ui/react';\r\nimport { ArrowBackIcon } from \"@chakra-ui/icons\";\r\nimport { getSender, getSenderFull } from '../../config/ChatLogics';\r\nimport ProfileModal from './ProfileModal';\r\nimport UpdateGroupChatModal from './UpdateGroupChatModal';\r\n\r\nconst SingleChat = ({ fetchAgain, setFetchAgain }) => {\r\n  const { selectedChat, setSelectedChat, user } = ChatState();\r\n  const [messages, setMessages] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n  const [socketConnected, setSocketConnected] = useState(false);\r\n  const [typing, setTyping] = useState(false);\r\n  const [istyping, setIsTyping] = useState(false);\r\n  const toast = useToast();\r\n  return (\r\n    <>\r\n      {selectedChat ? (\r\n        <Flex\r\n          flexDirection=\"column\"\r\n          alignItems=\"stretch\"\r\n          h=\"100vh\"\r\n          w=\"100%\"\r\n          overflow=\"hidden\"\r\n        >\r\n          <Flex\r\n            fontSize={{ base: \"28px\", md: \"30px\" }}\r\n            pb={3}\r\n            px={2}\r\n            w=\"100%\"\r\n            fontFamily=\"Work sans\"\r\n            justifyContent=\"space-between\"\r\n            alignItems=\"center\"\r\n          >\r\n            <IconButton\r\n              d={{ base: \"flex\", md: \"none\" }}\r\n              icon={<ArrowBackIcon />}\r\n              onClick={() => setSelectedChat(\"\")}\r\n            />\r\n            <Text>\r\n              {selectedChat.isGroupChat\r\n                ? selectedChat.chatName.toUpperCase()\r\n                : getSender(user, selectedChat.users)}\r\n            </Text>\r\n\r\n            <Flex alignItems=\"center\">\r\n              {/* Conditional rendering based on selectedChat type */}\r\n              {selectedChat.isGroupChat ? (\r\n                <UpdateGroupChatModal\r\n                  fetchAgain={fetchAgain}\r\n                  setFetchAgain={setFetchAgain}\r\n                />\r\n              ) : (\r\n                <ProfileModal user={getSenderFull(user, selectedChat.users)} />\r\n              )}\r\n            </Flex>\r\n          </Flex>\r\n\r\n          <Flex\r\n            d=\"flex\"\r\n            flexDir=\"column\"\r\n            justifyContent=\"flex-end\"\r\n            p={3}\r\n            bg=\"#E8E8E8\"\r\n            w=\"100%\"\r\n            h=\"450px\"\r\n            borderRadius=\"lg\"\r\n            overflowY=\"auto\"\r\n          >\r\n            {/* Chat content goes here */}\r\n          </Flex>\r\n        </Flex>\r\n      ) : (\r\n        <Flex\r\n          d=\"flex\"\r\n          alignItems=\"center\"\r\n          justifyContent=\"center\"\r\n          h=\"100vh\"\r\n        >\r\n          <Text fontSize=\"3xl\" pb={3} fontFamily=\"Work sans\">\r\n            Click on a user to start a new conversation\r\n          </Text>\r\n        </Flex>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SingleChat;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}