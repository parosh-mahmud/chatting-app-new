{"ast":null,"code":"var isDom = function isDom() {\n  return typeof document !== \"undefined\";\n};\nfunction getPlatform() {\n  var _agent$platform;\n  var agent = navigator.userAgentData;\n  return (_agent$platform = agent === null || agent === void 0 ? void 0 : agent.platform) !== null && _agent$platform !== void 0 ? _agent$platform : navigator.platform;\n}\nvar pt = function pt(v) {\n  return isDom() && v.test(getPlatform());\n};\nvar ua = function ua(v) {\n  return isDom() && v.test(navigator.userAgent);\n};\nvar vn = function vn(v) {\n  return isDom() && v.test(navigator.vendor);\n};\nvar isTouchDevice = function isTouchDevice() {\n  return isDom() && !!navigator.maxTouchPoints;\n};\nvar isMac = function isMac() {\n  return pt(/^Mac/) && !isTouchDevice();\n};\nvar isIPhone = function isIPhone() {\n  return pt(/^iPhone/);\n};\nvar isSafari = function isSafari() {\n  return isApple() && vn(/apple/i);\n};\nvar isFirefox = function isFirefox() {\n  return ua(/firefox\\//i);\n};\nvar isApple = function isApple() {\n  return pt(/mac|iphone|ipad|ipod/i);\n};\nvar isIos = function isIos() {\n  return isApple() && !isMac();\n};\nexport { getPlatform, isApple, isDom, isFirefox, isIPhone, isIos, isMac, isSafari, isTouchDevice };","map":{"version":3,"names":["isDom","document","getPlatform","_agent$platform","agent","navigator","userAgentData","platform","pt","v","test","ua","userAgent","vn","vendor","isTouchDevice","maxTouchPoints","isMac","isIPhone","isSafari","isApple","isFirefox","isIos"],"sources":["E:/chatapp/client/node_modules/@zag-js/dom-query/dist/platform.mjs"],"sourcesContent":["const isDom = () => typeof document !== \"undefined\";\nfunction getPlatform() {\n  const agent = navigator.userAgentData;\n  return agent?.platform ?? navigator.platform;\n}\nconst pt = (v) => isDom() && v.test(getPlatform());\nconst ua = (v) => isDom() && v.test(navigator.userAgent);\nconst vn = (v) => isDom() && v.test(navigator.vendor);\nconst isTouchDevice = () => isDom() && !!navigator.maxTouchPoints;\nconst isMac = () => pt(/^Mac/) && !isTouchDevice();\nconst isIPhone = () => pt(/^iPhone/);\nconst isSafari = () => isApple() && vn(/apple/i);\nconst isFirefox = () => ua(/firefox\\//i);\nconst isApple = () => pt(/mac|iphone|ipad|ipod/i);\nconst isIos = () => isApple() && !isMac();\n\nexport { getPlatform, isApple, isDom, isFirefox, isIPhone, isIos, isMac, isSafari, isTouchDevice };\n"],"mappings":"AAAA,IAAMA,KAAK,GAAG,SAARA,KAAKA,CAAA;EAAA,OAAS,OAAOC,QAAQ,KAAK,WAAW;AAAA;AACnD,SAASC,WAAWA,CAAA,EAAG;EAAA,IAAAC,eAAA;EACrB,IAAMC,KAAK,GAAGC,SAAS,CAACC,aAAa;EACrC,QAAAH,eAAA,GAAOC,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEG,QAAQ,cAAAJ,eAAA,cAAAA,eAAA,GAAIE,SAAS,CAACE,QAAQ;AAC9C;AACA,IAAMC,EAAE,GAAG,SAALA,EAAEA,CAAIC,CAAC;EAAA,OAAKT,KAAK,CAAC,CAAC,IAAIS,CAAC,CAACC,IAAI,CAACR,WAAW,CAAC,CAAC,CAAC;AAAA;AAClD,IAAMS,EAAE,GAAG,SAALA,EAAEA,CAAIF,CAAC;EAAA,OAAKT,KAAK,CAAC,CAAC,IAAIS,CAAC,CAACC,IAAI,CAACL,SAAS,CAACO,SAAS,CAAC;AAAA;AACxD,IAAMC,EAAE,GAAG,SAALA,EAAEA,CAAIJ,CAAC;EAAA,OAAKT,KAAK,CAAC,CAAC,IAAIS,CAAC,CAACC,IAAI,CAACL,SAAS,CAACS,MAAM,CAAC;AAAA;AACrD,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAAA;EAAA,OAASf,KAAK,CAAC,CAAC,IAAI,CAAC,CAACK,SAAS,CAACW,cAAc;AAAA;AACjE,IAAMC,KAAK,GAAG,SAARA,KAAKA,CAAA;EAAA,OAAST,EAAE,CAAC,MAAM,CAAC,IAAI,CAACO,aAAa,CAAC,CAAC;AAAA;AAClD,IAAMG,QAAQ,GAAG,SAAXA,QAAQA,CAAA;EAAA,OAASV,EAAE,CAAC,SAAS,CAAC;AAAA;AACpC,IAAMW,QAAQ,GAAG,SAAXA,QAAQA,CAAA;EAAA,OAASC,OAAO,CAAC,CAAC,IAAIP,EAAE,CAAC,QAAQ,CAAC;AAAA;AAChD,IAAMQ,SAAS,GAAG,SAAZA,SAASA,CAAA;EAAA,OAASV,EAAE,CAAC,YAAY,CAAC;AAAA;AACxC,IAAMS,OAAO,GAAG,SAAVA,OAAOA,CAAA;EAAA,OAASZ,EAAE,CAAC,uBAAuB,CAAC;AAAA;AACjD,IAAMc,KAAK,GAAG,SAARA,KAAKA,CAAA;EAAA,OAASF,OAAO,CAAC,CAAC,IAAI,CAACH,KAAK,CAAC,CAAC;AAAA;AAEzC,SAASf,WAAW,EAAEkB,OAAO,EAAEpB,KAAK,EAAEqB,SAAS,EAAEH,QAAQ,EAAEI,KAAK,EAAEL,KAAK,EAAEE,QAAQ,EAAEJ,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}