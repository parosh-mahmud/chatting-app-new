{"ast":null,"code":"import _slicedToArray from\"E:/chatapp/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{Box,Flex,useBreakpointValue}from\"@chakra-ui/react\";import{ChatState}from\"../Context/ChatProvider\";import SideDrawer from\"../components/miscellaneous/SideDrawer\";import MyChats from\"../components/miscellaneous/MyChats\";import ChatBox from\"../components/miscellaneous/ChatBox\";import{useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ChatPage=function ChatPage(){var _ChatState=ChatState(),user=_ChatState.user;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),fetchAgain=_useState2[0],setFetchAgain=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),showChatBox=_useState4[0],setShowChatBox=_useState4[1];// Track whether to show ChatBox\nvar isMobile=useBreakpointValue({base:true,md:false});// Function to toggle between MyChats and ChatBox views\nvar toggleChatView=function toggleChatView(){setShowChatBox(!showChatBox);};// Function to open the ChatBox\nvar openChatBox=function openChatBox(){setShowChatBox(true);};return/*#__PURE__*/_jsxs(\"div\",{style:{width:\"100%\"},children:[user&&/*#__PURE__*/_jsx(SideDrawer,{}),/*#__PURE__*/_jsx(Flex,{flexDirection:isMobile?\"column\":\"row\",justifyContent:\"space-between\",w:\"100%\",h:\"91.5vh\",p:\"10px\",children:user&&/*#__PURE__*/_jsx(_Fragment,{children:isMobile?// Mobile view: Show MyChats or ChatBox conditionally based on state\nshowChatBox?/*#__PURE__*/_jsx(ChatBox,{fetchAgain:fetchAgain,setFetchAgain:setFetchAgain,showChatBox:showChatBox,toggleChatView:toggleChatView}):/*#__PURE__*/_jsx(MyChats,{fetchAgain:fetchAgain,setFetchAgain:setFetchAgain,openChatBox:openChatBox// Pass openChatBox in mobile view\n}):/*#__PURE__*/ // Desktop view: Always show both MyChats and ChatBox side by side\n_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(MyChats,{fetchAgain:fetchAgain,setFetchAgain:setFetchAgain,openChatBox:openChatBox// Pass openChatBox in desktop view\n}),/*#__PURE__*/_jsx(ChatBox,{fetchAgain:fetchAgain,setFetchAgain:setFetchAgain,toggleChatView:toggleChatView// Pass toggleChatView in desktop view\n})]})})})]});};export default ChatPage;","map":{"version":3,"names":["Box","Flex","useBreakpointValue","ChatState","SideDrawer","MyChats","ChatBox","useState","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","ChatPage","_ChatState","user","_useState","_useState2","_slicedToArray","fetchAgain","setFetchAgain","_useState3","_useState4","showChatBox","setShowChatBox","isMobile","base","md","toggleChatView","openChatBox","style","width","children","flexDirection","justifyContent","w","h","p"],"sources":["E:/chatapp/client/src/pages/ChatPage.js"],"sourcesContent":["import { Box, Flex, useBreakpointValue } from \"@chakra-ui/react\";\r\nimport { ChatState } from \"../Context/ChatProvider\";\r\nimport SideDrawer from \"../components/miscellaneous/SideDrawer\"; \r\nimport MyChats from \"../components/miscellaneous/MyChats\";\r\nimport ChatBox from \"../components/miscellaneous/ChatBox\";\r\nimport { useState } from \"react\";\r\n\r\nconst ChatPage = () => {\r\n  const { user } = ChatState();\r\n  const [fetchAgain, setFetchAgain] = useState(false);\r\n  const [showChatBox, setShowChatBox] = useState(false); // Track whether to show ChatBox\r\n  const isMobile = useBreakpointValue({ base: true, md: false });\r\n\r\n  // Function to toggle between MyChats and ChatBox views\r\n  const toggleChatView = () => {\r\n    setShowChatBox(!showChatBox);\r\n  };\r\n\r\n  // Function to open the ChatBox\r\n  const openChatBox = () => {\r\n    setShowChatBox(true);\r\n  };\r\n\r\n  return (\r\n    <div style={{ width: \"100%\" }}>\r\n      {user && <SideDrawer />} \r\n      <Flex\r\n        flexDirection={isMobile ? \"column\" : \"row\"}\r\n        justifyContent=\"space-between\"\r\n        w=\"100%\"\r\n        h=\"91.5vh\"\r\n        p=\"10px\"\r\n      >\r\n        {user && (\r\n          <>\r\n            {isMobile ? (\r\n              // Mobile view: Show MyChats or ChatBox conditionally based on state\r\n              showChatBox ? (\r\n                <ChatBox\r\n                  fetchAgain={fetchAgain}\r\n                  setFetchAgain={setFetchAgain}\r\n                  showChatBox={showChatBox}\r\n                  toggleChatView={toggleChatView}\r\n                />\r\n              ) : (\r\n                <MyChats\r\n                  fetchAgain={fetchAgain}\r\n                  setFetchAgain={setFetchAgain}\r\n                  openChatBox={openChatBox} // Pass openChatBox in mobile view\r\n                />\r\n              )\r\n            ) : (\r\n              // Desktop view: Always show both MyChats and ChatBox side by side\r\n              <>\r\n                <MyChats\r\n                  fetchAgain={fetchAgain}\r\n                  setFetchAgain={setFetchAgain}\r\n                  openChatBox={openChatBox} // Pass openChatBox in desktop view\r\n                />\r\n                <ChatBox\r\n                  fetchAgain={fetchAgain}\r\n                  setFetchAgain={setFetchAgain}\r\n                  toggleChatView={toggleChatView} // Pass toggleChatView in desktop view\r\n                />\r\n              </>\r\n            )}\r\n          </>\r\n        )}\r\n      </Flex>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatPage;\r\n"],"mappings":"uGAAA,OAASA,GAAG,CAAEC,IAAI,CAAEC,kBAAkB,KAAQ,kBAAkB,CAChE,OAASC,SAAS,KAAQ,yBAAyB,CACnD,MAAO,CAAAC,UAAU,KAAM,wCAAwC,CAC/D,MAAO,CAAAC,OAAO,KAAM,qCAAqC,CACzD,MAAO,CAAAC,OAAO,KAAM,qCAAqC,CACzD,OAASC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,QAAA,IAAAC,SAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEjC,GAAM,CAAAC,QAAQ,CAAG,QAAX,CAAAA,QAAQA,CAAA,CAAS,CACrB,IAAAC,UAAA,CAAiBZ,SAAS,CAAC,CAAC,CAApBa,IAAI,CAAAD,UAAA,CAAJC,IAAI,CACZ,IAAAC,SAAA,CAAoCV,QAAQ,CAAC,KAAK,CAAC,CAAAW,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAA5CG,UAAU,CAAAF,UAAA,IAAEG,aAAa,CAAAH,UAAA,IAChC,IAAAI,UAAA,CAAsCf,QAAQ,CAAC,KAAK,CAAC,CAAAgB,UAAA,CAAAJ,cAAA,CAAAG,UAAA,IAA9CE,WAAW,CAAAD,UAAA,IAAEE,cAAc,CAAAF,UAAA,IAAqB;AACvD,GAAM,CAAAG,QAAQ,CAAGxB,kBAAkB,CAAC,CAAEyB,IAAI,CAAE,IAAI,CAAEC,EAAE,CAAE,KAAM,CAAC,CAAC,CAE9D;AACA,GAAM,CAAAC,cAAc,CAAG,QAAjB,CAAAA,cAAcA,CAAA,CAAS,CAC3BJ,cAAc,CAAC,CAACD,WAAW,CAAC,CAC9B,CAAC,CAED;AACA,GAAM,CAAAM,WAAW,CAAG,QAAd,CAAAA,WAAWA,CAAA,CAAS,CACxBL,cAAc,CAAC,IAAI,CAAC,CACtB,CAAC,CAED,mBACEZ,KAAA,QAAKkB,KAAK,CAAE,CAAEC,KAAK,CAAE,MAAO,CAAE,CAAAC,QAAA,EAC3BjB,IAAI,eAAIP,IAAA,CAACL,UAAU,GAAE,CAAC,cACvBK,IAAA,CAACR,IAAI,EACHiC,aAAa,CAAER,QAAQ,CAAG,QAAQ,CAAG,KAAM,CAC3CS,cAAc,CAAC,eAAe,CAC9BC,CAAC,CAAC,MAAM,CACRC,CAAC,CAAC,QAAQ,CACVC,CAAC,CAAC,MAAM,CAAAL,QAAA,CAEPjB,IAAI,eACHP,IAAA,CAAAE,SAAA,EAAAsB,QAAA,CACGP,QAAQ,CACP;AACAF,WAAW,cACTf,IAAA,CAACH,OAAO,EACNc,UAAU,CAAEA,UAAW,CACvBC,aAAa,CAAEA,aAAc,CAC7BG,WAAW,CAAEA,WAAY,CACzBK,cAAc,CAAEA,cAAe,CAChC,CAAC,cAEFpB,IAAA,CAACJ,OAAO,EACNe,UAAU,CAAEA,UAAW,CACvBC,aAAa,CAAEA,aAAc,CAC7BS,WAAW,CAAEA,WAAa;AAAA,CAC3B,CACF,eAED;AACAjB,KAAA,CAAAF,SAAA,EAAAsB,QAAA,eACExB,IAAA,CAACJ,OAAO,EACNe,UAAU,CAAEA,UAAW,CACvBC,aAAa,CAAEA,aAAc,CAC7BS,WAAW,CAAEA,WAAa;AAAA,CAC3B,CAAC,cACFrB,IAAA,CAACH,OAAO,EACNc,UAAU,CAAEA,UAAW,CACvBC,aAAa,CAAEA,aAAc,CAC7BQ,cAAc,CAAEA,cAAgB;AAAA,CACjC,CAAC,EACF,CACH,CACD,CACH,CACG,CAAC,EACJ,CAAC,CAEV,CAAC,CAED,cAAe,CAAAf,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}